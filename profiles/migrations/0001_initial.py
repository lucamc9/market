# Generated by Django 2.0 on 2018-06-14 02:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=1500, null=True)),
                ('deal', models.CharField(choices=[('e', 'Equity'), ('t', 'Trade'), ('d', 'Debt')], max_length=1)),
                ('sector', models.CharField(choices=[('Agriculture', (('fruit', 'Fruit'), ('coffee', 'Coffee'), ('nuts', 'Nuts'), ('tea', 'Tea'), ('cocoa', 'Cocoa'), ('sugar', 'Sugar'), ('forest', 'Forest'), ('bamboo', 'Bamboo'), ('vegetables', 'Vegetables'), ('meat', 'Meat'), ('fish', 'Fish'), ('shea', 'Shea'), ('moringa', 'Moringa'))), ('Energy & Water', (('stoves', 'Stoves'), ('solar', 'Solar'), ('lamps', 'Lamp/Kits'), ('bio', 'Bio/Gar'), ('wind', 'Wind/Hydro'), ('mini-grid', 'Mini-Grid'), ('water-filt', 'Water filtration'), ('briquettes', 'Briquettes/Pellets'))), ('Waste Management', (('recycling', 'Recycling'), ('sewerage', 'Sewerage'), ('collection', 'Collection'))), ('Health & Social', (('health', 'Health Foods/Products'), ('excercise', 'Excercise Items'), ('medical', 'Medical Facilities/Treatment'), ('care', 'Care Provision'))), ('Tourism', (('conservation', 'Conservation'), ('community', 'Community Engagement'))), ('Craft', (('leather', 'Leather/Textiles/Plant Fibres'), ('wood', 'Wood'), ('cosmetics', 'Cosmetics'), ('accessories', 'Accessories'), ('household', 'Household Items'), ('jewellery', 'Jewellery'), ('coffins', 'Coffins'), ('fashion', 'Fashion'))), ('Finance', (('provision', 'Finance Provision to Individuals'), ('micro-leasing', 'Micro-leasing'))), ('Education', (('low', 'Low Fee Private Schooling'), ('training', 'Vocational Training'))), ('Construction & Manufacturing', (('building', 'House Building'), ('roads', 'Roads'), ('manufacturing', 'Technical Manufacturing'))), ('Accomodation & Food Services', (('hotels', 'Hotels'), ('restaurants', 'Restaurants'), ('catering', 'Catering'), ('bakery', 'Bakery'), ('delivery', 'Food Delivery'))), ('Professional & Support Services', (('law', 'Law'), ('pr', 'PR'), ('real', 'Real Estate'))), ('Other', (('entertainment', 'Entertainment & Arts'), ('tech', 'Technology')))], max_length=50)),
                ('avatar', models.ImageField(default='static/logos/logo-white.png', upload_to='')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SMEProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=1500, null=True)),
                ('legal_struct', models.CharField(choices=[('BC', 'Benefit Corporation'), ('CO', 'Co-op'), ('CR', 'Corporation'), ('LL', 'Limited Liability Company'), ('NP', 'Non-Profit/Non-Governmental Organization'), ('PT', 'Partnership'), ('SP', 'Sole-Proprietorship'), ('OT', 'Other')], max_length=2)),
                ('ownership', models.CharField(choices=[('WO', 'Woman Owned'), ('YO', 'Youth Owned'), ('LO', 'Local Owned'), ('IO', 'International Owned'), ('OT', 'Other')], max_length=2)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('year', models.IntegerField(choices=[(1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018)], default=2018)),
                ('currency', models.CharField(choices=[('MXV', 'Mexican Unidad de Inversion (UDI) (MXV)'), ('LRD', 'Liberian Dollar (LRD)'), ('ZWN', 'Zimbabwe dollar A/08 (ZWN)'), ('BHD', 'Bahraini Dinar (BHD)'), ('TVD', 'Tuvalu dollar (TVD)'), ('SCR', 'Seychelles Rupee (SCR)'), ('ARS', 'Argentine Peso (ARS)'), ('SYP', 'Syrian Pound (SYP)'), ('SGD', 'Singapore Dollar (SGD)'), ('XYZ', 'Default currency. (XYZ)'), ('PLN', 'Zloty (PLN)'), ('UAH', 'Hryvnia (UAH)'), ('GBP', 'Pound Sterling (GBP)'), ('PAB', 'Balboa (PAB)'), ('UYU', 'Uruguayan peso (UYU)'), ('KRW', 'Won (KRW)'), ('DKK', 'Danish Krone (DKK)'), ('CLP', 'Chilean peso (CLP)'), ('MZN', 'Metical (MZN)'), ('BWP', 'Pula (BWP)'), ('CDF', 'Congolese franc (CDF)'), ('GTQ', 'Quetzal (GTQ)'), ('IMP', 'Isle of Man Pound (IMP)'), ('PGK', 'Kina (PGK)'), ('XAF', 'CFA franc BEAC (XAF)'), ('SSP', 'South Sudanese Pound (SSP)'), ('TND', 'Tunisian Dinar (TND)'), ('AOA', 'Kwanza (AOA)'), ('ILS', 'New Israeli Sheqel (ILS)'), ('CZK', 'Czech Koruna (CZK)'), ('HUF', 'Forint (HUF)'), ('XFO', 'Gold-Franc (XFO)'), ('VEF', 'Bolivar Fuerte (VEF)'), ('IQD', 'Iraqi Dinar (IQD)'), ('BSD', 'Bahamian Dollar (BSD)'), ('GYD', 'Guyana Dollar (GYD)'), ('BYR', 'Belarussian Ruble (BYR)'), ('PEN', 'Nuevo Sol (PEN)'), ('MGA', 'Malagasy Ariary (MGA)'), ('BTN', 'Bhutanese ngultrum (BTN)'), ('TMT', 'Turkmenistan New Manat (TMT)'), ('XSU', 'Sucre (XSU)'), ('CHE', 'WIR Euro (CHE)'), ('PYG', 'Guarani (PYG)'), ('MAD', 'Moroccan Dirham (MAD)'), ('COP', 'Colombian peso (COP)'), ('STD', 'Dobra (STD)'), ('HNL', 'Lempira (HNL)'), ('XBD', 'European Unit of Account 17(E.U.A.-17) (XBD)'), ('TWD', 'New Taiwan Dollar (TWD)'), ('ZMK', 'Zambian Kwacha (ZMK)'), ('LAK', 'Kip (LAK)'), ('CLF', 'Unidad de Fomento (CLF)'), ('FJD', 'Fiji Dollar (FJD)'), ('DJF', 'Djibouti Franc (DJF)'), ('SZL', 'Lilangeni (SZL)'), ('RWF', 'Rwanda Franc (RWF)'), ('USD', 'US Dollar (USD)'), ('MUR', 'Mauritius Rupee (MUR)'), ('PKR', 'Pakistan Rupee (PKR)'), ('YER', 'Yemeni Rial (YER)'), ('AUD', 'Australian Dollar (AUD)'), ('BIF', 'Burundi Franc (BIF)'), ('GEL', 'Lari (GEL)'), ('UYI', 'Uruguay Peso en Unidades Indexadas (URUIURUI) (UYI)'), ('TTD', 'Trinidad and Tobago Dollar (TTD)'), ('BND', 'Brunei Dollar (BND)'), ('MOP', 'Pataca (MOP)'), ('VND', 'Dong (VND)'), ('LVL', 'Latvian Lats (LVL)'), ('AWG', 'Aruban Guilder (AWG)'), ('MDL', 'Moldovan Leu (MDL)'), ('RUB', 'Russian Ruble (RUB)'), ('JPY', 'Yen (JPY)'), ('MRO', 'Ouguiya (MRO)'), ('ANG', 'Netherlands Antillian Guilder (ANG)'), ('KMF', 'Comoro Franc (KMF)'), ('AZN', 'Azerbaijanian Manat (AZN)'), ('UGX', 'Uganda Shilling (UGX)'), ('XPD', 'Palladium (XPD)'), ('XBC', 'European Unit of Account 9(E.U.A.-9) (XBC)'), ('KES', 'Kenyan Shilling (KES)'), ('BDT', 'Taka (BDT)'), ('RON', 'New Leu (RON)'), ('NZD', 'New Zealand Dollar (NZD)'), ('EGP', 'Egyptian Pound (EGP)'), ('HTG', 'Haitian gourde (HTG)'), ('JOD', 'Jordanian Dinar (JOD)'), ('AMD', 'Armenian Dram (AMD)'), ('SHP', 'Saint Helena Pound (SHP)'), ('MVR', 'Rufiyaa (MVR)'), ('UZS', 'Uzbekistan Sum (UZS)'), ('WST', 'Tala (WST)'), ('LSL', 'Lesotho loti (LSL)'), ('TMM', 'Manat (TMM)'), ('XFU', 'UIC-Franc (XFU)'), ('TOP', 'Paanga (TOP)'), ('THB', 'Baht (THB)'), ('SEK', 'Swedish Krona (SEK)'), ('BBD', 'Barbados Dollar (BBD)'), ('DZD', 'Algerian Dinar (DZD)'), ('TJS', 'Somoni (TJS)'), ('VUV', 'Vatu (VUV)'), ('CUC', 'Cuban convertible peso (CUC)'), ('MXN', 'Mexican peso (MXN)'), ('HRK', 'Croatian Kuna (HRK)'), ('BOB', 'Boliviano (BOB)'), ('KWD', 'Kuwaiti Dinar (KWD)'), ('XAU', 'Gold (XAU)'), ('GHS', 'Ghana Cedi (GHS)'), ('SAR', 'Saudi Riyal (SAR)'), ('MNT', 'Tugrik (MNT)'), ('KHR', 'Riel (KHR)'), ('CRC', 'Costa Rican Colon (CRC)'), ('KYD', 'Cayman Islands Dollar (KYD)'), ('EUR', 'Euro (EUR)'), ('XOF', 'CFA Franc BCEAO (XOF)'), ('XTS', 'Codes specifically reserved for testing purposes (XTS)'), ('XUA', 'ADB Unit of Account (XUA)'), ('DOP', 'Dominican Peso (DOP)'), ('ZMW', 'Zambian Kwacha (ZMW)'), ('ISK', 'Iceland Krona (ISK)'), ('BZD', 'Belize Dollar (BZD)'), ('MMK', 'Kyat (MMK)'), ('GMD', 'Dalasi (GMD)'), ('XCD', 'East Caribbean Dollar (XCD)'), ('COU', 'Unidad de Valor Real (COU)'), ('KGS', 'Som (KGS)'), ('XPF', 'CFP Franc (XPF)'), ('SVC', 'El Salvador Colon (SVC)'), ('ETB', 'Ethiopian Birr (ETB)'), ('MYR', 'Malaysian Ringgit (MYR)'), ('TRY', 'Turkish Lira (TRY)'), ('XBA', 'Bond Markets Units European Composite Unit (EURCO) (XBA)'), ('GIP', 'Gibraltar Pound (GIP)'), ('CHW', 'WIR Franc (CHW)'), ('LYD', 'Libyan Dinar (LYD)'), ('NPR', 'Nepalese Rupee (NPR)'), ('ALL', 'Lek (ALL)'), ('CVE', 'Cape Verde Escudo (CVE)'), ('OMR', 'Rial Omani (OMR)'), ('NOK', 'Norwegian Krone (NOK)'), ('TZS', 'Tanzanian Shilling (TZS)'), ('NIO', 'Cordoba Oro (NIO)'), ('SRD', 'Surinam Dollar (SRD)'), ('KPW', 'North Korean Won (KPW)'), ('LTL', 'Lithuanian Litas (LTL)'), ('CHF', 'Swiss Franc (CHF)'), ('SLL', 'Leone (SLL)'), ('MKD', 'Denar (MKD)'), ('XBB', 'European Monetary Unit (E.M.U.-6) (XBB)'), ('SBD', 'Solomon Islands Dollar (SBD)'), ('AED', 'UAE Dirham (AED)'), ('ZWL', 'Zimbabwe dollar A/09 (ZWL)'), ('CAD', 'Canadian Dollar (CAD)'), ('MWK', 'Malawian Kwacha (MWK)'), ('RSD', 'Serbian Dinar (RSD)'), ('BYN', 'Belarussian Ruble (BYN)'), ('HKD', 'Hong Kong Dollar (HKD)'), ('JMD', 'Jamaican Dollar (JMD)'), ('LKR', 'Sri Lanka Rupee (LKR)'), ('NGN', 'Naira (NGN)'), ('CNY', 'Yuan Renminbi (CNY)'), ('ZAR', 'Rand (ZAR)'), ('ZWD', 'Zimbabwe Dollar A/06 (ZWD)'), ('FKP', 'Falkland Islands Pound (FKP)'), ('SOS', 'Somali Shilling (SOS)'), ('GNF', 'Guinea Franc (GNF)'), ('BRL', 'Brazilian Real (BRL)'), ('XAG', 'Silver (XAG)'), ('QAR', 'Qatari Rial (QAR)'), ('INR', 'Indian Rupee (INR)'), ('BOV', 'Mvdol (BOV)'), ('XPT', 'Platinum (XPT)'), ('BMD', 'Bermudian Dollar (customarily known as Bermuda Dollar) (BMD)'), ('PHP', 'Philippine Peso (PHP)'), ('USN', 'US Dollar (Next day) (USN)'), ('SDG', 'Sudanese Pound (SDG)'), ('NAD', 'Namibian Dollar (NAD)'), ('CUP', 'Cuban Peso (CUP)'), ('BAM', 'Convertible Marks (BAM)'), ('KZT', 'Tenge (KZT)'), ('LBP', 'Lebanese Pound (LBP)'), ('IRR', 'Iranian Rial (IRR)'), ('ERN', 'Nakfa (ERN)'), ('IDR', 'Rupiah (IDR)'), ('AFN', 'Afghani (AFN)'), ('XXX', 'The codes assigned for transactions where no currency is involved (XXX)'), ('BGN', 'Bulgarian Lev (BGN)'), ('XDR', 'SDR (XDR)')], max_length=50)),
                ('lkin_urls', models.URLField(blank=True, null=True)),
                ('sector', models.CharField(choices=[('Agriculture', (('fruit', 'Fruit'), ('coffee', 'Coffee'), ('nuts', 'Nuts'), ('tea', 'Tea'), ('cocoa', 'Cocoa'), ('sugar', 'Sugar'), ('forest', 'Forest'), ('bamboo', 'Bamboo'), ('vegetables', 'Vegetables'), ('meat', 'Meat'), ('fish', 'Fish'), ('shea', 'Shea'), ('moringa', 'Moringa'))), ('Energy & Water', (('stoves', 'Stoves'), ('solar', 'Solar'), ('lamps', 'Lamp/Kits'), ('bio', 'Bio/Gar'), ('wind', 'Wind/Hydro'), ('mini-grid', 'Mini-Grid'), ('water-filt', 'Water filtration'), ('briquettes', 'Briquettes/Pellets'))), ('Waste Management', (('recycling', 'Recycling'), ('sewerage', 'Sewerage'), ('collection', 'Collection'))), ('Health & Social', (('health', 'Health Foods/Products'), ('excercise', 'Excercise Items'), ('medical', 'Medical Facilities/Treatment'), ('care', 'Care Provision'))), ('Tourism', (('conservation', 'Conservation'), ('community', 'Community Engagement'))), ('Craft', (('leather', 'Leather/Textiles/Plant Fibres'), ('wood', 'Wood'), ('cosmetics', 'Cosmetics'), ('accessories', 'Accessories'), ('household', 'Household Items'), ('jewellery', 'Jewellery'), ('coffins', 'Coffins'), ('fashion', 'Fashion'))), ('Finance', (('provision', 'Finance Provision to Individuals'), ('micro-leasing', 'Micro-leasing'))), ('Education', (('low', 'Low Fee Private Schooling'), ('training', 'Vocational Training'))), ('Construction & Manufacturing', (('building', 'House Building'), ('roads', 'Roads'), ('manufacturing', 'Technical Manufacturing'))), ('Accomodation & Food Services', (('hotels', 'Hotels'), ('restaurants', 'Restaurants'), ('catering', 'Catering'), ('bakery', 'Bakery'), ('delivery', 'Food Delivery'))), ('Professional & Support Services', (('law', 'Law'), ('pr', 'PR'), ('real', 'Real Estate'))), ('Other', (('entertainment', 'Entertainment & Arts'), ('tech', 'Technology')))], max_length=50)),
                ('avatar', models.ImageField(default='pictures/logo-white.png', upload_to='pictures/')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(default='static/logos/logo-white.png', upload_to='')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-timestamp'],
            },
        ),
    ]
